{"version":3,"sources":["components/SkillBox.jsx","components/InfoBox.jsx","data/AboutData.jsx","data/SkillsData.jsx","data/ProjectsData.jsx","components/Home.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["SkillBox","data","title","image","href","Card","className","style","width","Img","height","variant","src","Header","text","InfoBox","mode","badges","description","buttons","startsWith","Row","Col","endsWith","Image","rounded","gap","map","badge","alt","button","Button","React","cloneElement","icon","xs","md","lg","Body","Title","maxHeight","propTypes","PropTypes","shape","string","isRequired","arrayOf","element","defaultProps","aboutData","skillsData","projectsData","Home","useState","setMode","Jumbotron","backgroundColor","color","borderRadius","Container","position","skillData","ToggleButtonGroup","type","name","defaultValue","ToggleButton","value","onClick","projectData","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","aria-label","size","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f56c604.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Card from 'react-bootstrap/Card';\n\nfunction SkillBox({ data }) {\n  const { title, image } = data;\n  return (\n    <a href={title.href}>\n      <Card className=\"d-inline-block mx-2\" style={{ width: '130px' }}>\n        <Card.Img className=\"p-3 w-100 h-auto\" width=\"1\" height=\"1\" variant=\"top\" src={image} />\n        <Card.Header className=\"text-center text-truncate p-1\">\n          <strong>{title.text}</strong>\n        </Card.Header>\n      </Card>\n    </a>\n  );\n}\n\nSkillBox.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string,\n    }),\n    image: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default SkillBox;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Button from 'react-bootstrap/Button';\nimport Card from 'react-bootstrap/Card';\n\nfunction InfoBox({ data, mode }) {\n  const {\n    title, badges, image, description, buttons,\n  } = data;\n\n  const renderListBox = () => (\n    <Row className=\"mb-5\">\n      <Col>\n        <div className={`col-6 col-md-3 ${mode.endsWith('left') ? 'float-left pl-0 pr-3' : 'float-right pr-0 pl-3'}`}>\n          <Image className=\"w-100 h-auto\" width=\"1\" height=\"1\" src={image} rounded />\n        </div>\n        <h5 className=\"d-flex flex-wrap align-items-baseline\" style={{ gap: '.5rem' }}>\n          {(title.href\n            && <a href={title.href}>{title.text}</a>)\n            || <span>{title.text}</span>}\n          {badges.map((badge) => (\n            <img key={badge.alt} className=\"mt-n1\" src={badge.src} alt={badge.alt} />\n          ))}\n        </h5>\n        {description}\n        <div className=\"d-flex flex-wrap\" style={{ gap: '.5rem' }}>\n          {buttons.map((button) => (\n            <Button key={button.text} href={button.href} variant={button.variant}>\n              {button.text}\n              {React.cloneElement(button.icon, { className: 'ml-2 mt-n1' })}\n            </Button>\n          ))}\n        </div>\n      </Col>\n    </Row>\n  );\n\n  const renderIconBox = () => (\n    <Col className=\"mb-4\" xs={12} md={6} lg={4}>\n      <Card>\n        <Image className=\"w-50 h-auto mt-3 mx-auto\" width=\"1\" height=\"1\" variant=\"top\" src={image} rounded />\n        <Card.Body className=\"mb-n2\">\n          <Card.Title className=\"text-center mb-1\"><a href={title.href}>{title.text}</a></Card.Title>\n          <div className=\"overflow-auto mb-2\" style={{ maxHeight: '185px' }}>\n            <div className=\"d-flex flex-wrap justify-content-center mb-1\" style={{ gap: '.5rem' }}>\n              {badges.map((badge) => (\n                <img key={badge.alt} src={badge.src} alt={badge.alt} />\n              ))}\n            </div>\n            {description}\n          </div>\n          <div className=\"d-flex flex-wrap justify-content-center\" style={{ gap: '.5rem' }}>\n            {buttons.map((button) => (\n              <Button key={button.text} href={button.href} variant={button.variant}>\n                {button.text}\n                {React.cloneElement(button.icon, { className: 'ml-2 mt-n1' })}\n              </Button>\n            ))}\n          </div>\n        </Card.Body>\n      </Card>\n    </Col>\n  );\n\n  return (mode.startsWith('list') && renderListBox()) || renderIconBox();\n}\n\nInfoBox.propTypes = {\n  data: PropTypes.shape({\n    title: PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      href: PropTypes.string,\n    }),\n    badges: PropTypes.arrayOf(PropTypes.shape({\n      src: PropTypes.string.isRequired,\n      alt: PropTypes.string.isRequired,\n    })),\n    image: PropTypes.string.isRequired,\n    description: PropTypes.element.isRequired,\n    buttons: PropTypes.arrayOf(PropTypes.shape({\n      text: PropTypes.string.isRequired,\n      icon: PropTypes.element,\n      href: PropTypes.string.isRequired,\n    })),\n  }).isRequired,\n  mode: PropTypes.string,\n};\n\nInfoBox.defaultProps = {\n  mode: 'list right',\n};\n\nexport default InfoBox;\n","import React from 'react';\nimport { ImFilePdf } from 'react-icons/im';\n\nconst aboutData = {\n  title: {\n    text: 'About Me',\n  },\n  badges: [\n    {\n      src: 'https://img.shields.io/badge/graduated-dec%202020-blueviolet',\n      alt: 'Graduated Dec 2020',\n    },\n    {\n      src: 'https://img.shields.io/badge/gpa-3.92-red',\n      alt: 'GPA 3.92',\n    },\n    {\n      src: 'https://img.shields.io/badge/magna%20cum%20laude-orange',\n      alt: 'magna cum laude',\n    },\n    {\n      src: 'https://img.shields.io/badge/loves%20to%20learn-ff69b4',\n      alt: 'Loves to learn',\n    },\n  ],\n  image: 'profile-pic.jpg',\n  // eslint-disable-next-line max-len, react/jsx-one-expression-per-line\n  description: <p>Hello! My name is Evalyn Berleant. I am a recent graduate from Brandeis University with a B.S. in Computer Science and minor in Mathematics. I have experience in Ruby on Rails, Java, JavaScript, React.js, Vue.js, Python, SQL, and Bash. In Summer 2020, I interned at Galatea Associates, where I used the Java Spring Boot framework, React.js, and Lombok to write several API endpoints for various applications. In Fall 2020, I was a member of a robotics-centered independent study, where I developed a live-updating web interface using Vue.js and Python. I have also worked as a TA for Advanced Programming Techniques and Operating Systems, and I interned for CQ Consulting as a contractor for the Arkansas Department of Health in Summers 2018 and 2019. Above all, I&apos;m always excited to learn something new!</p>,\n  buttons: [\n    {\n      text: 'Resume',\n      icon: <ImFilePdf />,\n      href: 'resume.pdf',\n      variant: 'outline-light',\n    },\n  ],\n};\n\nexport default aboutData;\n","const skillsData = [\n  {\n    title: {\n      text: 'Ruby',\n      href: 'https://www.ruby-lang.org/en',\n    },\n    image: 'logos/ruby.png',\n  },\n  {\n    title: {\n      text: 'Ruby on Rails',\n      href: 'https://rubyonrails.org',\n    },\n    image: 'logos/rails.png',\n  },\n  {\n    title: {\n      text: 'Java',\n      href: 'https://www.java.com',\n    },\n    image: 'logos/java.png',\n  },\n  {\n    title: {\n      text: 'Java Spring',\n      href: 'https://spring.io',\n    },\n    image: 'logos/spring.png',\n  },\n  {\n    title: {\n      text: 'JavaScript',\n      href: 'https://developer.mozilla.org/en-US/docs/Web/JavaScript',\n    },\n    image: 'logos/js.png',\n  },\n  {\n    title: {\n      text: 'React',\n      href: 'https://reactjs.org',\n    },\n    image: 'logos/react.png',\n  },\n  {\n    title: {\n      text: 'Vue.js',\n      href: 'https://vuejs.org',\n    },\n    image: 'logos/vue.png',\n  },\n  {\n    title: {\n      text: 'D3.js',\n      href: 'https://d3js.org',\n    },\n    image: 'logos/d3.png',\n  },\n  {\n    title: {\n      text: 'HTML 5',\n      href: 'https://developer.mozilla.org/en-US/docs/Web/HTML',\n    },\n    image: 'logos/html.png',\n  },\n  {\n    title: {\n      text: 'CSS',\n      href: 'https://developer.mozilla.org/en-US/docs/Web/CSS',\n    },\n    image: 'logos/css.png',\n  },\n  {\n    title: {\n      text: 'PostgreSQL',\n      href: 'https://www.postgresql.org',\n    },\n    image: 'logos/postgresql.png',\n  },\n  {\n    title: {\n      text: 'Python',\n      href: 'https://www.python.org',\n    },\n    image: 'logos/python.png',\n  },\n  {\n    title: {\n      text: 'ROS',\n      href: 'https://www.ros.org',\n    },\n    image: 'logos/ros.png',\n  },\n];\n\nexport default skillsData;\n","import React from 'react';\nimport { FiExternalLink } from 'react-icons/fi';\nimport { AiFillGithub, AiOutlineInfoCircle } from 'react-icons/ai';\n\nconst projectsData = [\n  {\n    title: {\n      text: 'Youtaite Network',\n      href: 'https://youtaite-network.netlify.app',\n    },\n    badges: [\n      {\n        src: 'https://img.shields.io/badge/react-%5E17.0.1-informational',\n        alt: 'React ^17.0.1',\n      },\n      {\n        src: 'https://img.shields.io/badge/d3.js-6.6.0-informational',\n        alt: 'D3.js 6.6.0',\n      },\n      {\n        src: 'https://img.shields.io/badge/ruby-2.7.1-informational',\n        alt: 'Ruby 2.7.1',\n      },\n      {\n        src: 'https://img.shields.io/badge/rails-~%3E%206.0.3-blue',\n        alt: 'Rails ~> 6.0.3',\n      },\n      {\n        src: 'https://img.shields.io/github/last-commit/eberleant/youtaite-network-client',\n        alt: 'Last commit',\n      },\n    ],\n    image: 'youtaite-network.gif',\n    // eslint-disable-next-line max-len, react/jsx-one-expression-per-line\n    description: <p>This is a personal project focused on a community of Youtube content creators who often collaborate with each other. I wanted to show how different collaborations are connected to each other through people - for example, if I am in two different collabs, those two collabs are connected through me. I hope to show the existence of different corners within the community, where groups of people collaborate with each other more often than with someone outside of their corner. I have a other ideas for creatively displaying the data (once I have enough of it), such as identifying closely-related clusters and &quot;representative&quot; collaborations of those clusters. The frontend website is written in React. The data visualization is created using d3. The backend API is written in Ruby on Rails. If you feel like checking out the backend API, the main routes are <a href=\"https://youtaite-network-api.herokuapp.com/people\">/people</a>, <a href=\"https://youtaite-network-api.herokuapp.com/collabs\">/collabs</a>, and <a href=\"https://youtaite-network-api.herokuapp.com/roles\">/roles</a>.</p>,\n    buttons: [\n      {\n        text: 'Check it out',\n        icon: <FiExternalLink />,\n        href: 'https://youtaite-network.netlify.app',\n        variant: 'outline-primary',\n      },\n      {\n        text: 'GitHub repo',\n        icon: <AiFillGithub />,\n        href: 'https://github.com/eberleant/youtaite-network-client',\n        variant: 'outline-secondary',\n      },\n    ],\n  },\n  {\n    title: {\n      text: 'CERBARIS: real-time display',\n      href: 'https://campusrover.github.io/PupperPy/web_interface.html',\n    },\n    badges: [\n      {\n        src: 'https://img.shields.io/badge/vue-%5E2.6.11-informational',\n        alt: 'Vue ^2.6.11',\n      },\n      {\n        src: 'https://img.shields.io/badge/python-3.9.0-informational',\n        alt: 'Python 3.9.0',\n      },\n      {\n        src: 'https://img.shields.io/github/last-commit/campusrover/PupperPy',\n        alt: 'Last commit',\n      },\n    ],\n    image: 'cerbaris.gif',\n    // eslint-disable-next-line max-len, react/jsx-one-expression-per-line\n    description: <p>Under Prof. Pito Salas&apos;s mentorship, I worked with Roshan Nanu, Ben Ballintyn, and Chris Tam in a robotics-centered independent study. The project involved building and customizing a Stanford Pupper robot. As part of this, I developed a web interface that displays data in real-time about the robot’s state, including sensor data, computer vision data, and current behavior. I used Vue.js, combined with paper.js, JointJS, and BootstrapVue, for the frontend of the web interface. When the robot is running, its control script (written in Python) pushes data to the web interface, which then updates its display. The website can be found at <a href=\"https://cerbaris.netlify.app\">cerbaris.netlify.app</a>, but without the robot running, no data is being received or updated. A detailed technical description of the site can also be found on the <a href=\"https://campusrover.github.io/PupperPy/web_interface.html\">web interface section of our final project report</a>.</p>,\n    buttons: [\n      {\n        text: 'Learn more',\n        icon: <AiOutlineInfoCircle />,\n        variant: 'outline-primary',\n        href: 'https://campusrover.github.io/PupperPy/web_interface.html',\n      },\n      {\n        text: 'GitHub repo',\n        icon: <AiFillGithub />,\n        variant: 'outline-secondary',\n        href: 'https://github.com/campusrover/PupperPy',\n      },\n    ],\n  },\n  {\n    title: {\n      text: 'SWARMBOTS',\n      href: 'https://campusrover.github.io/swarmbots',\n    },\n    badges: [\n      {\n        src: 'https://img.shields.io/badge/ros-melodic-informational',\n        alt: 'ROS melodic',\n      },\n      {\n        src: 'https://img.shields.io/badge/gazebo-9.0.0-informational',\n        alt: 'Gazebo 9.0.0',\n      },\n      {\n        src: 'https://img.shields.io/badge/python-2.7.11-informational',\n        alt: 'Python 2.7.11',\n      },\n      {\n        src: 'https://img.shields.io/github/last-commit/campusrover/swarmbots',\n        alt: 'Last commit',\n      },\n    ],\n    image: 'swarmbots.gif',\n    // eslint-disable-next-line max-len, react/jsx-one-expression-per-line\n    description: <p>I worked with Kelly Duan to create SWARMBOTS, a ROS and Gazebo program which allows multiple robots in a swarm to collaboratively map their environment. At any time, there is a single leader (the <em>swarmboss</em>) whose movement dictates the behavior of the other robots in the swarm, who may follow or disperse from the leader. If the swarmboss becomes unavailable or stuck for any reason, a different robot will automatically be assigned as the new swarmboss. Through the command-line, you can specify the mode (follow or disperse), as well as the number of robots to spawn. 🤖🦠</p>,\n    buttons: [\n      {\n        text: 'Learn more',\n        icon: <AiOutlineInfoCircle />,\n        variant: 'outline-primary',\n        href: 'https://campusrover.github.io/swarmbots',\n      },\n      {\n        text: 'GitHub repo',\n        icon: <AiFillGithub />,\n        variant: 'outline-secondary',\n        href: 'https://github.com/campusrover/swarmbots',\n      },\n    ],\n  },\n  {\n    title: {\n      text: 'Mad Libs Generator',\n      href: 'http://madlibsgenerator.pythonanywhere.com/',\n    },\n    badges: [\n      {\n        src: 'https://img.shields.io/badge/python-3.9.0-informational',\n        alt: 'Python 3.9.0',\n      },\n      {\n        src: 'https://img.shields.io/badge/nltk-3.5-informational',\n        alt: 'NLTK 3.5',\n      },\n      {\n        src: 'https://img.shields.io/badge/flask-1.1.2-informational',\n        alt: 'Flask 1.1.2',\n      },\n      {\n        src: 'https://img.shields.io/github/last-commit/ztbartolome/Mad_Libs_Generator',\n        alt: 'Last commit',\n      },\n    ],\n    image: 'logos/nltk.png',\n    // eslint-disable-next-line max-len, react/jsx-one-expression-per-line\n    description: <p>I worked with Zeline Tricia Bartolome to create Mad Libs Generator, which uses natural language processing to create a Mad Libs-like game for the user. The generator randomly chooses words from a passage for the user to replace. While there is a selection of passages to choose from, the generator is also capable of taking user-provided passages.</p>,\n    buttons: [\n      {\n        text: 'Check it out',\n        icon: <FiExternalLink />,\n        variant: 'outline-primary',\n        href: 'http://madlibsgenerator.pythonanywhere.com/',\n      },\n      {\n        text: 'GitHub repo',\n        icon: <AiFillGithub />,\n        variant: 'outline-secondary',\n        href: 'https://github.com/ztbartolome/Mad_Libs_Generator',\n      },\n    ],\n  },\n  {\n    title: {\n      text: 'Multiple Stopwatches',\n      href: 'https://eberleant.github.io/multiple-stopwatches',\n    },\n    badges: [\n      {\n        src: 'https://img.shields.io/badge/javascript-es6-informational',\n        alt: 'JavaScript ES6',\n      },\n      {\n        src: 'https://img.shields.io/badge/html-5-informational',\n        alt: 'HTML 5',\n      },\n      {\n        src: 'https://img.shields.io/github/last-commit/eberleant/multiple-stopwatches',\n        alt: 'Last commit',\n      },\n    ],\n    image: 'multiple-stopwatches.gif',\n    // eslint-disable-next-line max-len, react/jsx-one-expression-per-line\n    description: <p>This tool allows you to create multiple stopwatches and assign a keyboard shortcut to each one to quickly trigger them. You can also create macro keybinds, or keyboard shortcuts which change the state of more than one stopwatch at once. It has many potential uses, but I use it to help myself and others with scripting songs (deciding who sings which lines) because I place a high priority on each singer getting approximately the same amount of time as every other singer. With this, I can quickly figure out how much time each singer has with only one playthrough of the song.</p>,\n    buttons: [\n      {\n        text: 'Check it out',\n        icon: <FiExternalLink />,\n        variant: 'outline-primary',\n        href: 'https://eberleant.github.io/multiple-stopwatches',\n      },\n      {\n        text: 'GitHub repo',\n        icon: <AiFillGithub />,\n        variant: 'outline-secondary',\n        href: 'https://github.com/eberleant/multiple-stopwatches',\n      },\n    ],\n  },\n  {\n    title: {\n      text: 'Script to help with grading',\n      href: 'https://github.com/eberleant/extract-rename-submissions',\n    },\n    badges: [\n      {\n        src: 'https://img.shields.io/badge/gnu%20bash-3.2.57-informational',\n        alt: 'GNU Bash 3.2.57',\n      },\n      {\n        src: 'https://img.shields.io/github/last-commit/eberleant/extract-rename-submissions',\n        alt: 'Last commit',\n      },\n    ],\n    image: 'logos/bash.png',\n    // eslint-disable-next-line max-len, react/jsx-one-expression-per-line\n    description: <p>I wrote this small script to help me grade assignments as a teaching assistant. The school website allows me to download all student submissions at once, but the format involves lots of clicks and searches to find the students and submission files that I am supposed to grade. Running this script reorganizes the files so that they are much more efficient for me to find and grade.</p>,\n    buttons: [\n      {\n        text: 'GitHub repo',\n        icon: <AiFillGithub />,\n        variant: 'outline-secondary',\n        href: 'https://github.com/eberleant/extract-rename-submissions',\n      },\n    ],\n  },\n];\n\nexport default projectsData;\n","import React, { useState } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Jumbotron from 'react-bootstrap/Jumbotron';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ToggleButtonGroup from 'react-bootstrap/ToggleButtonGroup';\nimport { BiChevronsRight } from 'react-icons/bi';\nimport { AiOutlineUnorderedList } from 'react-icons/ai';\nimport { BsGrid } from 'react-icons/bs';\nimport SkillBox from './SkillBox';\nimport InfoBox from './InfoBox';\nimport aboutData from '../data/AboutData';\nimport skillsData from '../data/SkillsData';\nimport projectsData from '../data/ProjectsData';\n\nfunction Home() {\n  const [mode, setMode] = useState('list right');\n\n  const handleListMode = () => {\n    setMode('list right');\n  };\n\n  const handleIconMode = () => {\n    setMode('icon');\n  };\n\n  return (\n    <>\n      <Jumbotron className=\"mb-0\" style={{ backgroundColor: '#282c34', color: 'lightgrey', borderRadius: 0 }}>\n        <Container>\n          <InfoBox data={aboutData} mode=\"list left\" />\n        </Container>\n      </Jumbotron>\n      <Jumbotron className=\"mb-0\">\n        <Container>\n          <h4>\n            <BiChevronsRight className=\"mt-n1\" />\n            Skills\n          </h4>\n          <hr />\n          <div style={{ position: 'relative' }}>\n            <div className=\"mb-5 fade-x\">\n              <div className=\"px-3 scroll-x\">\n                {skillsData.map((skillData) => (\n                  <SkillBox key={skillData.title.text} data={skillData} />\n                ))}\n              </div>\n            </div>\n          </div>\n          <h4>\n            <BiChevronsRight className=\"mt-n1\" />\n            Projects\n            <ToggleButtonGroup className=\"mt-n2 ml-3\" type=\"radio\" name=\"options\" defaultValue=\"list\">\n              <ToggleButton variant=\"secondary\" value=\"list\" onClick={handleListMode}><AiOutlineUnorderedList /></ToggleButton>\n              <ToggleButton variant=\"secondary\" value=\"icon\" onClick={handleIconMode}><BsGrid /></ToggleButton>\n            </ToggleButtonGroup>\n          </h4>\n          <hr />\n          <div className=\"d-flex flex-wrap\">\n            {projectsData.map((projectData) => (\n              <InfoBox key={projectData.title.text} data={projectData} mode={mode} />\n            ))}\n          </div>\n        </Container>\n      </Jumbotron>\n    </>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport { AiFillGithub, AiFillLinkedin, AiFillFacebook } from 'react-icons/ai';\nimport { IoMdMail } from 'react-icons/io';\nimport Home from './components/Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.scss';\n\nexport default function App() {\n  return (\n    <Router>\n      <div>\n        <Navbar bg=\"dark\" variant=\"dark\" expand=\"sm\">\n          <Container>\n            <Navbar.Brand href=\"/\">Evalyn Berleant</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse className=\"justify-content-end\">\n              <Nav>\n                <div className=\"d-flex flex-row\">\n                  <Nav.Link className=\"pr-2\" href=\"mailto:eberleant@gmail.com\" aria-label=\"Email link\">\n                    <IoMdMail size=\"1.5rem\" />\n                  </Nav.Link>\n                  <Nav.Link className=\"pr-2\" href=\"https://github.com/eberleant\" aria-label=\"Github link\">\n                    <AiFillGithub size=\"1.5rem\" />\n                  </Nav.Link>\n                  <Nav.Link className=\"pr-2\" href=\"https://www.linkedin.com/in/eberleant\" aria-label=\"Linkedin link\">\n                    <AiFillLinkedin size=\"1.5rem\" />\n                  </Nav.Link>\n                  <Nav.Link className=\"pr-2\" href=\"https://www.facebook.com/evalyn.berleant\" aria-label=\"Facebook link\">\n                    <AiFillFacebook size=\"1.5rem\" />\n                  </Nav.Link>\n                </div>\n              </Nav>\n            </Navbar.Collapse>\n          </Container>\n        </Navbar>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n\n        {/* footer */}\n        <Navbar bg=\"dark\" variant=\"dark\" className=\"flex-column\">\n          <Nav className=\"mr-auto ml-auto\">\n            <Nav.Link href=\"mailto:eberleant@gmail.com\">Like what you see? Let&apos;s work together.</Nav.Link>\n          </Nav>\n          <Nav className=\"mr-auto ml-auto\">\n            <Nav.Link href=\"mailto:eberleant@gmail.com\" aria-label=\"Email link\">\n              <IoMdMail size=\"1.5rem\" />\n            </Nav.Link>\n            <Nav.Link href=\"https://github.com/eberleant\" aria-label=\"Github link\">\n              <AiFillGithub size=\"1.5rem\" />\n            </Nav.Link>\n            <Nav.Link href=\"https://www.linkedin.com/in/eberleant\" aria-label=\"Linkedin link\">\n              <AiFillLinkedin size=\"1.5rem\" />\n            </Nav.Link>\n            <Nav.Link href=\"https://www.facebook.com/evalyn.berleant\" aria-label=\"Facebook link\">\n              <AiFillFacebook size=\"1.5rem\" />\n            </Nav.Link>\n          </Nav>\n        </Navbar>\n      </div>\n    </Router>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}